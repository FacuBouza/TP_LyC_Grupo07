Terminals unused in grammar

   OP_KEY
   CL_KEY
   DIGITO
   CARACTER
   COMMENT


Gramática

    0 $accept: programa $end

    1 programa: main

    2 main: bloque

    3 bloque: sentencia
    4       | bloque sentencia

    5 sentencia: sentencia_simple
    6          | sentencia_compuesta

    7 sentencia_simple: asignacion OP_ENDLINE
    8                 | display OP_ENDLINE
    9                 | declaracion_var OP_ENDLINE
   10                 | expresion OP_ENDLINE
   11                 | get_action OP_ENDLINE

   12 sentencia_compuesta: while
   13                    | while_especial
   14                    | if
   15                    | for

   16 declaracion_var: DIM OP_CORC list_var CL_COR AS OP_CORC list_types CL_COR

   17 list_var: ID
   18         | list_var OP_COMA ID

   19 type_var: INT_TYPE
   20         | REAL_TYPE
   21         | STRING_TYPE

   22 list_types: type_var
   23           | list_types OP_COMA type_var

   24 $@1: /* vacío */

   25 while: WHILE condicion_prima DO bloque $@1 ENDWHILE

   26 $@2: /* vacío */

   27 $@3: /* vacío */

   28 while_especial: WHILE ID $@2 IN exp_while DO bloque $@3 ENDWHILE

   29 exp_while: OP_CORC list_exp CL_COR

   30 list_exp: expresion
   31         | list_exp OP_COMA expresion

   32 $@4: /* vacío */

   33 if: IF OP_PAR condicion_prima CL_PAR bloque $@4 ENDIF

   34 $@5: /* vacío */

   35 if: IF OP_PAR condicion_prima CL_PAR bloque ELSE bloque $@5 ENDIF

   36 condicion_prima: condicion

   37 condicion: comparacion_simple
   38          | condicion_anidada
   39          | NOT comparacion_simple

   40 condicion_anidada: condicion OP_AND comparacion_simple
   41                  | condicion OP_OR comparacion_simple

   42 $@6: /* vacío */

   43 comparacion_simple: expresion $@6 op_comparacion expresion

   44 expresion: termino
   45          | expresion OP_SUM termino
   46          | expresion OP_MEN termino

   47 termino: termino_par
   48        | termino OP_MULT termino_par
   49        | termino OP_DIV termino_par

   50 termino_par: asig_val
   51            | OP_PAR expresion CL_PAR

   52 $@7: /* vacío */

   53 inicializacion_for: FOR ID OP_ASIG asig_val $@7 TO asig_val

   54 $@8: /* vacío */

   55 for: inicializacion_for pasos_for $@8 bloque NEXT ID

   56 $@9: /* vacío */

   57 for: inicializacion_for $@9 bloque NEXT ID

   58 pasos_for: OP_CORC expresion CL_COR

   59 asig_val: ID
   60         | INT_NUM
   61         | FLOAT_NUM
   62         | STRING_DEC

   63 $@10: /* vacío */

   64 asignacion: ID OP_ASIG $@10 expresion

   65 display: DISPLAY asig_val

   66 get_action: GET ID

   67 op_comparacion: OP_EQ
   68               | OP_GE
   69               | OP_GT
   70               | OP_LE
   71               | OP_LT
   72               | OP_DIST


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
OP_ASIG (258) 53 64
OP_GT (259) 69
OP_LT (260) 71
OP_GE (261) 68
OP_LE (262) 70
OP_EQ (263) 67
OP_SUM (264) 45
OP_MULT (265) 48
OP_MEN (266) 46
OP_DIV (267) 49
OP_OR (268) 41
OP_AND (269) 40
NOT (270) 39
OP_DIST (271) 72
OP_ENDLINE (272) 7 8 9 10 11
OP_COMA (273) 18 23 31
OP_PAR (274) 33 35 51
CL_PAR (275) 33 35 51
OP_KEY (276)
CL_KEY (277)
OP_CORC (278) 16 29 58
CL_COR (279) 16 29 58
WHILE (280) 25 28
IF (281) 33 35
ENDIF (282) 33 35
ELSE (283) 35
DIM (284) 16
AS (285) 16
IN (286) 28
DO (287) 25 28
ENDWHILE (288) 25 28
FOR (289) 53
TO (290) 53
NEXT (291) 55 57
INT_TYPE (292) 19
REAL_TYPE (293) 20
STRING_TYPE (294) 21
DIGITO (295)
CARACTER (296)
COMMENT (297)
STRING_DEC (298) 62
INT_NUM (299) 60
FLOAT_NUM (300) 61
DISPLAY (301) 65
GET (302) 66
ID (303) 17 18 28 53 55 57 59 64 66


No terminales con las reglas donde aparecen

$accept (49)
    en la izquierda: 0
programa (50)
    en la izquierda: 1, en la derecha: 0
main (51)
    en la izquierda: 2, en la derecha: 1
bloque (52)
    en la izquierda: 3 4, en la derecha: 2 4 25 28 33 35 55 57
sentencia (53)
    en la izquierda: 5 6, en la derecha: 3 4
sentencia_simple (54)
    en la izquierda: 7 8 9 10 11, en la derecha: 5
sentencia_compuesta (55)
    en la izquierda: 12 13 14 15, en la derecha: 6
declaracion_var (56)
    en la izquierda: 16, en la derecha: 9
list_var (57)
    en la izquierda: 17 18, en la derecha: 16 18
type_var (58)
    en la izquierda: 19 20 21, en la derecha: 22 23
list_types (59)
    en la izquierda: 22 23, en la derecha: 16 23
while (60)
    en la izquierda: 25, en la derecha: 12
$@1 (61)
    en la izquierda: 24, en la derecha: 25
while_especial (62)
    en la izquierda: 28, en la derecha: 13
$@2 (63)
    en la izquierda: 26, en la derecha: 28
$@3 (64)
    en la izquierda: 27, en la derecha: 28
exp_while (65)
    en la izquierda: 29, en la derecha: 28
list_exp (66)
    en la izquierda: 30 31, en la derecha: 29 31
if (67)
    en la izquierda: 33 35, en la derecha: 14
$@4 (68)
    en la izquierda: 32, en la derecha: 33
$@5 (69)
    en la izquierda: 34, en la derecha: 35
condicion_prima (70)
    en la izquierda: 36, en la derecha: 25 33 35
condicion (71)
    en la izquierda: 37 38 39, en la derecha: 36 40 41
condicion_anidada (72)
    en la izquierda: 40 41, en la derecha: 38
comparacion_simple (73)
    en la izquierda: 43, en la derecha: 37 39 40 41
$@6 (74)
    en la izquierda: 42, en la derecha: 43
expresion (75)
    en la izquierda: 44 45 46, en la derecha: 10 30 31 43 45 46 51
    58 64
termino (76)
    en la izquierda: 47 48 49, en la derecha: 44 45 46 48 49
termino_par (77)
    en la izquierda: 50 51, en la derecha: 47 48 49
inicializacion_for (78)
    en la izquierda: 53, en la derecha: 55 57
$@7 (79)
    en la izquierda: 52, en la derecha: 53
for (80)
    en la izquierda: 55 57, en la derecha: 15
$@8 (81)
    en la izquierda: 54, en la derecha: 55
$@9 (82)
    en la izquierda: 56, en la derecha: 57
pasos_for (83)
    en la izquierda: 58, en la derecha: 55
asig_val (84)
    en la izquierda: 59 60 61 62, en la derecha: 50 53 65
asignacion (85)
    en la izquierda: 64, en la derecha: 7
$@10 (86)
    en la izquierda: 63, en la derecha: 64
display (87)
    en la izquierda: 65, en la derecha: 8
get_action (88)
    en la izquierda: 66, en la derecha: 11
op_comparacion (89)
    en la izquierda: 67 68 69 70 71 72, en la derecha: 43


estado 0

    0 $accept: . programa $end

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    programa             ir al estado 12
    main                 ir al estado 13
    bloque               ir al estado 14
    sentencia            ir al estado 15
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 1

   51 termino_par: OP_PAR . expresion CL_PAR

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    expresion    ir al estado 32
    termino      ir al estado 23
    termino_par  ir al estado 24
    asig_val     ir al estado 27


estado 2

   25 while: WHILE . condicion_prima DO bloque $@1 ENDWHILE
   28 while_especial: WHILE . ID $@2 IN exp_while DO bloque $@3 ENDWHILE

    NOT         desplazar e ir al estado 33
    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 34

    condicion_prima     ir al estado 35
    condicion           ir al estado 36
    condicion_anidada   ir al estado 37
    comparacion_simple  ir al estado 38
    expresion           ir al estado 39
    termino             ir al estado 23
    termino_par         ir al estado 24
    asig_val            ir al estado 27


estado 3

   33 if: IF . OP_PAR condicion_prima CL_PAR bloque $@4 ENDIF
   35   | IF . OP_PAR condicion_prima CL_PAR bloque ELSE bloque $@5 ENDIF

    OP_PAR  desplazar e ir al estado 40


estado 4

   16 declaracion_var: DIM . OP_CORC list_var CL_COR AS OP_CORC list_types CL_COR

    OP_CORC  desplazar e ir al estado 41


estado 5

   53 inicializacion_for: FOR . ID OP_ASIG asig_val $@7 TO asig_val

    ID  desplazar e ir al estado 42


estado 6

   62 asig_val: STRING_DEC .

    $default  reduce usando la regla 62 (asig_val)


estado 7

   60 asig_val: INT_NUM .

    $default  reduce usando la regla 60 (asig_val)


estado 8

   61 asig_val: FLOAT_NUM .

    $default  reduce usando la regla 61 (asig_val)


estado 9

   65 display: DISPLAY . asig_val

    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    asig_val  ir al estado 43


estado 10

   66 get_action: GET . ID

    ID  desplazar e ir al estado 44


estado 11

   59 asig_val: ID .
   64 asignacion: ID . OP_ASIG $@10 expresion

    OP_ASIG  desplazar e ir al estado 45

    $default  reduce usando la regla 59 (asig_val)


estado 12

    0 $accept: programa . $end

    $end  desplazar e ir al estado 46


estado 13

    1 programa: main .

    $default  reduce usando la regla 1 (programa)


estado 14

    2 main: bloque .
    4 bloque: bloque . sentencia

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    $default  reduce usando la regla 2 (main)

    sentencia            ir al estado 47
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 15

    3 bloque: sentencia .

    $default  reduce usando la regla 3 (bloque)


estado 16

    5 sentencia: sentencia_simple .

    $default  reduce usando la regla 5 (sentencia)


estado 17

    6 sentencia: sentencia_compuesta .

    $default  reduce usando la regla 6 (sentencia)


estado 18

    9 sentencia_simple: declaracion_var . OP_ENDLINE

    OP_ENDLINE  desplazar e ir al estado 48


estado 19

   12 sentencia_compuesta: while .

    $default  reduce usando la regla 12 (sentencia_compuesta)


estado 20

   13 sentencia_compuesta: while_especial .

    $default  reduce usando la regla 13 (sentencia_compuesta)


estado 21

   14 sentencia_compuesta: if .

    $default  reduce usando la regla 14 (sentencia_compuesta)


estado 22

   10 sentencia_simple: expresion . OP_ENDLINE
   45 expresion: expresion . OP_SUM termino
   46          | expresion . OP_MEN termino

    OP_SUM      desplazar e ir al estado 49
    OP_MEN      desplazar e ir al estado 50
    OP_ENDLINE  desplazar e ir al estado 51


estado 23

   44 expresion: termino .
   48 termino: termino . OP_MULT termino_par
   49        | termino . OP_DIV termino_par

    OP_MULT  desplazar e ir al estado 52
    OP_DIV   desplazar e ir al estado 53

    $default  reduce usando la regla 44 (expresion)


estado 24

   47 termino: termino_par .

    $default  reduce usando la regla 47 (termino)


estado 25

   55 for: inicializacion_for . pasos_for $@8 bloque NEXT ID
   57    | inicializacion_for . $@9 bloque NEXT ID

    OP_CORC  desplazar e ir al estado 54

    $default  reduce usando la regla 56 ($@9)

    $@9        ir al estado 55
    pasos_for  ir al estado 56


estado 26

   15 sentencia_compuesta: for .

    $default  reduce usando la regla 15 (sentencia_compuesta)


estado 27

   50 termino_par: asig_val .

    $default  reduce usando la regla 50 (termino_par)


estado 28

    7 sentencia_simple: asignacion . OP_ENDLINE

    OP_ENDLINE  desplazar e ir al estado 57


estado 29

    8 sentencia_simple: display . OP_ENDLINE

    OP_ENDLINE  desplazar e ir al estado 58


estado 30

   11 sentencia_simple: get_action . OP_ENDLINE

    OP_ENDLINE  desplazar e ir al estado 59


estado 31

   59 asig_val: ID .

    $default  reduce usando la regla 59 (asig_val)


estado 32

   45 expresion: expresion . OP_SUM termino
   46          | expresion . OP_MEN termino
   51 termino_par: OP_PAR expresion . CL_PAR

    OP_SUM  desplazar e ir al estado 49
    OP_MEN  desplazar e ir al estado 50
    CL_PAR  desplazar e ir al estado 60


estado 33

   39 condicion: NOT . comparacion_simple

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    comparacion_simple  ir al estado 61
    expresion           ir al estado 39
    termino             ir al estado 23
    termino_par         ir al estado 24
    asig_val            ir al estado 27


estado 34

   28 while_especial: WHILE ID . $@2 IN exp_while DO bloque $@3 ENDWHILE
   59 asig_val: ID .

    IN        reduce usando la regla 26 ($@2)
    $default  reduce usando la regla 59 (asig_val)

    $@2  ir al estado 62


estado 35

   25 while: WHILE condicion_prima . DO bloque $@1 ENDWHILE

    DO  desplazar e ir al estado 63


estado 36

   36 condicion_prima: condicion .
   40 condicion_anidada: condicion . OP_AND comparacion_simple
   41                  | condicion . OP_OR comparacion_simple

    OP_OR   desplazar e ir al estado 64
    OP_AND  desplazar e ir al estado 65

    $default  reduce usando la regla 36 (condicion_prima)


estado 37

   38 condicion: condicion_anidada .

    $default  reduce usando la regla 38 (condicion)


estado 38

   37 condicion: comparacion_simple .

    $default  reduce usando la regla 37 (condicion)


estado 39

   43 comparacion_simple: expresion . $@6 op_comparacion expresion
   45 expresion: expresion . OP_SUM termino
   46          | expresion . OP_MEN termino

    OP_SUM  desplazar e ir al estado 49
    OP_MEN  desplazar e ir al estado 50

    $default  reduce usando la regla 42 ($@6)

    $@6  ir al estado 66


estado 40

   33 if: IF OP_PAR . condicion_prima CL_PAR bloque $@4 ENDIF
   35   | IF OP_PAR . condicion_prima CL_PAR bloque ELSE bloque $@5 ENDIF

    NOT         desplazar e ir al estado 33
    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    condicion_prima     ir al estado 67
    condicion           ir al estado 36
    condicion_anidada   ir al estado 37
    comparacion_simple  ir al estado 38
    expresion           ir al estado 39
    termino             ir al estado 23
    termino_par         ir al estado 24
    asig_val            ir al estado 27


estado 41

   16 declaracion_var: DIM OP_CORC . list_var CL_COR AS OP_CORC list_types CL_COR

    ID  desplazar e ir al estado 68

    list_var  ir al estado 69


estado 42

   53 inicializacion_for: FOR ID . OP_ASIG asig_val $@7 TO asig_val

    OP_ASIG  desplazar e ir al estado 70


estado 43

   65 display: DISPLAY asig_val .

    $default  reduce usando la regla 65 (display)


estado 44

   66 get_action: GET ID .

    $default  reduce usando la regla 66 (get_action)


estado 45

   64 asignacion: ID OP_ASIG . $@10 expresion

    $default  reduce usando la regla 63 ($@10)

    $@10  ir al estado 71


estado 46

    0 $accept: programa $end .

    $default  aceptar


estado 47

    4 bloque: bloque sentencia .

    $default  reduce usando la regla 4 (bloque)


estado 48

    9 sentencia_simple: declaracion_var OP_ENDLINE .

    $default  reduce usando la regla 9 (sentencia_simple)


estado 49

   45 expresion: expresion OP_SUM . termino

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    termino      ir al estado 72
    termino_par  ir al estado 24
    asig_val     ir al estado 27


estado 50

   46 expresion: expresion OP_MEN . termino

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    termino      ir al estado 73
    termino_par  ir al estado 24
    asig_val     ir al estado 27


estado 51

   10 sentencia_simple: expresion OP_ENDLINE .

    $default  reduce usando la regla 10 (sentencia_simple)


estado 52

   48 termino: termino OP_MULT . termino_par

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    termino_par  ir al estado 74
    asig_val     ir al estado 27


estado 53

   49 termino: termino OP_DIV . termino_par

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    termino_par  ir al estado 75
    asig_val     ir al estado 27


estado 54

   58 pasos_for: OP_CORC . expresion CL_COR

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    expresion    ir al estado 76
    termino      ir al estado 23
    termino_par  ir al estado 24
    asig_val     ir al estado 27


estado 55

   57 for: inicializacion_for $@9 . bloque NEXT ID

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    bloque               ir al estado 77
    sentencia            ir al estado 15
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 56

   55 for: inicializacion_for pasos_for . $@8 bloque NEXT ID

    $default  reduce usando la regla 54 ($@8)

    $@8  ir al estado 78


estado 57

    7 sentencia_simple: asignacion OP_ENDLINE .

    $default  reduce usando la regla 7 (sentencia_simple)


estado 58

    8 sentencia_simple: display OP_ENDLINE .

    $default  reduce usando la regla 8 (sentencia_simple)


estado 59

   11 sentencia_simple: get_action OP_ENDLINE .

    $default  reduce usando la regla 11 (sentencia_simple)


estado 60

   51 termino_par: OP_PAR expresion CL_PAR .

    $default  reduce usando la regla 51 (termino_par)


estado 61

   39 condicion: NOT comparacion_simple .

    $default  reduce usando la regla 39 (condicion)


estado 62

   28 while_especial: WHILE ID $@2 . IN exp_while DO bloque $@3 ENDWHILE

    IN  desplazar e ir al estado 79


estado 63

   25 while: WHILE condicion_prima DO . bloque $@1 ENDWHILE

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    bloque               ir al estado 80
    sentencia            ir al estado 15
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 64

   41 condicion_anidada: condicion OP_OR . comparacion_simple

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    comparacion_simple  ir al estado 81
    expresion           ir al estado 39
    termino             ir al estado 23
    termino_par         ir al estado 24
    asig_val            ir al estado 27


estado 65

   40 condicion_anidada: condicion OP_AND . comparacion_simple

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    comparacion_simple  ir al estado 82
    expresion           ir al estado 39
    termino             ir al estado 23
    termino_par         ir al estado 24
    asig_val            ir al estado 27


estado 66

   43 comparacion_simple: expresion $@6 . op_comparacion expresion

    OP_GT    desplazar e ir al estado 83
    OP_LT    desplazar e ir al estado 84
    OP_GE    desplazar e ir al estado 85
    OP_LE    desplazar e ir al estado 86
    OP_EQ    desplazar e ir al estado 87
    OP_DIST  desplazar e ir al estado 88

    op_comparacion  ir al estado 89


estado 67

   33 if: IF OP_PAR condicion_prima . CL_PAR bloque $@4 ENDIF
   35   | IF OP_PAR condicion_prima . CL_PAR bloque ELSE bloque $@5 ENDIF

    CL_PAR  desplazar e ir al estado 90


estado 68

   17 list_var: ID .

    $default  reduce usando la regla 17 (list_var)


estado 69

   16 declaracion_var: DIM OP_CORC list_var . CL_COR AS OP_CORC list_types CL_COR
   18 list_var: list_var . OP_COMA ID

    OP_COMA  desplazar e ir al estado 91
    CL_COR   desplazar e ir al estado 92


estado 70

   53 inicializacion_for: FOR ID OP_ASIG . asig_val $@7 TO asig_val

    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    asig_val  ir al estado 93


estado 71

   64 asignacion: ID OP_ASIG $@10 . expresion

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    expresion    ir al estado 94
    termino      ir al estado 23
    termino_par  ir al estado 24
    asig_val     ir al estado 27


estado 72

   45 expresion: expresion OP_SUM termino .
   48 termino: termino . OP_MULT termino_par
   49        | termino . OP_DIV termino_par

    OP_MULT  desplazar e ir al estado 52
    OP_DIV   desplazar e ir al estado 53

    $default  reduce usando la regla 45 (expresion)


estado 73

   46 expresion: expresion OP_MEN termino .
   48 termino: termino . OP_MULT termino_par
   49        | termino . OP_DIV termino_par

    OP_MULT  desplazar e ir al estado 52
    OP_DIV   desplazar e ir al estado 53

    $default  reduce usando la regla 46 (expresion)


estado 74

   48 termino: termino OP_MULT termino_par .

    $default  reduce usando la regla 48 (termino)


estado 75

   49 termino: termino OP_DIV termino_par .

    $default  reduce usando la regla 49 (termino)


estado 76

   45 expresion: expresion . OP_SUM termino
   46          | expresion . OP_MEN termino
   58 pasos_for: OP_CORC expresion . CL_COR

    OP_SUM  desplazar e ir al estado 49
    OP_MEN  desplazar e ir al estado 50
    CL_COR  desplazar e ir al estado 95


estado 77

    4 bloque: bloque . sentencia
   57 for: inicializacion_for $@9 bloque . NEXT ID

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    NEXT        desplazar e ir al estado 96
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    sentencia            ir al estado 47
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 78

   55 for: inicializacion_for pasos_for $@8 . bloque NEXT ID

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    bloque               ir al estado 97
    sentencia            ir al estado 15
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 79

   28 while_especial: WHILE ID $@2 IN . exp_while DO bloque $@3 ENDWHILE

    OP_CORC  desplazar e ir al estado 98

    exp_while  ir al estado 99


estado 80

    4 bloque: bloque . sentencia
   25 while: WHILE condicion_prima DO bloque . $@1 ENDWHILE

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    $default  reduce usando la regla 24 ($@1)

    sentencia            ir al estado 47
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    $@1                  ir al estado 100
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 81

   41 condicion_anidada: condicion OP_OR comparacion_simple .

    $default  reduce usando la regla 41 (condicion_anidada)


estado 82

   40 condicion_anidada: condicion OP_AND comparacion_simple .

    $default  reduce usando la regla 40 (condicion_anidada)


estado 83

   69 op_comparacion: OP_GT .

    $default  reduce usando la regla 69 (op_comparacion)


estado 84

   71 op_comparacion: OP_LT .

    $default  reduce usando la regla 71 (op_comparacion)


estado 85

   68 op_comparacion: OP_GE .

    $default  reduce usando la regla 68 (op_comparacion)


estado 86

   70 op_comparacion: OP_LE .

    $default  reduce usando la regla 70 (op_comparacion)


estado 87

   67 op_comparacion: OP_EQ .

    $default  reduce usando la regla 67 (op_comparacion)


estado 88

   72 op_comparacion: OP_DIST .

    $default  reduce usando la regla 72 (op_comparacion)


estado 89

   43 comparacion_simple: expresion $@6 op_comparacion . expresion

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    expresion    ir al estado 101
    termino      ir al estado 23
    termino_par  ir al estado 24
    asig_val     ir al estado 27


estado 90

   33 if: IF OP_PAR condicion_prima CL_PAR . bloque $@4 ENDIF
   35   | IF OP_PAR condicion_prima CL_PAR . bloque ELSE bloque $@5 ENDIF

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    bloque               ir al estado 102
    sentencia            ir al estado 15
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 91

   18 list_var: list_var OP_COMA . ID

    ID  desplazar e ir al estado 103


estado 92

   16 declaracion_var: DIM OP_CORC list_var CL_COR . AS OP_CORC list_types CL_COR

    AS  desplazar e ir al estado 104


estado 93

   53 inicializacion_for: FOR ID OP_ASIG asig_val . $@7 TO asig_val

    $default  reduce usando la regla 52 ($@7)

    $@7  ir al estado 105


estado 94

   45 expresion: expresion . OP_SUM termino
   46          | expresion . OP_MEN termino
   64 asignacion: ID OP_ASIG $@10 expresion .

    OP_SUM  desplazar e ir al estado 49
    OP_MEN  desplazar e ir al estado 50

    $default  reduce usando la regla 64 (asignacion)


estado 95

   58 pasos_for: OP_CORC expresion CL_COR .

    $default  reduce usando la regla 58 (pasos_for)


estado 96

   57 for: inicializacion_for $@9 bloque NEXT . ID

    ID  desplazar e ir al estado 106


estado 97

    4 bloque: bloque . sentencia
   55 for: inicializacion_for pasos_for $@8 bloque . NEXT ID

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    NEXT        desplazar e ir al estado 107
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    sentencia            ir al estado 47
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 98

   29 exp_while: OP_CORC . list_exp CL_COR

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    list_exp     ir al estado 108
    expresion    ir al estado 109
    termino      ir al estado 23
    termino_par  ir al estado 24
    asig_val     ir al estado 27


estado 99

   28 while_especial: WHILE ID $@2 IN exp_while . DO bloque $@3 ENDWHILE

    DO  desplazar e ir al estado 110


estado 100

   25 while: WHILE condicion_prima DO bloque $@1 . ENDWHILE

    ENDWHILE  desplazar e ir al estado 111


estado 101

   43 comparacion_simple: expresion $@6 op_comparacion expresion .
   45 expresion: expresion . OP_SUM termino
   46          | expresion . OP_MEN termino

    OP_SUM  desplazar e ir al estado 49
    OP_MEN  desplazar e ir al estado 50

    $default  reduce usando la regla 43 (comparacion_simple)


estado 102

    4 bloque: bloque . sentencia
   33 if: IF OP_PAR condicion_prima CL_PAR bloque . $@4 ENDIF
   35   | IF OP_PAR condicion_prima CL_PAR bloque . ELSE bloque $@5 ENDIF

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    ELSE        desplazar e ir al estado 112
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    $default  reduce usando la regla 32 ($@4)

    sentencia            ir al estado 47
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    $@4                  ir al estado 113
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 103

   18 list_var: list_var OP_COMA ID .

    $default  reduce usando la regla 18 (list_var)


estado 104

   16 declaracion_var: DIM OP_CORC list_var CL_COR AS . OP_CORC list_types CL_COR

    OP_CORC  desplazar e ir al estado 114


estado 105

   53 inicializacion_for: FOR ID OP_ASIG asig_val $@7 . TO asig_val

    TO  desplazar e ir al estado 115


estado 106

   57 for: inicializacion_for $@9 bloque NEXT ID .

    $default  reduce usando la regla 57 (for)


estado 107

   55 for: inicializacion_for pasos_for $@8 bloque NEXT . ID

    ID  desplazar e ir al estado 116


estado 108

   29 exp_while: OP_CORC list_exp . CL_COR
   31 list_exp: list_exp . OP_COMA expresion

    OP_COMA  desplazar e ir al estado 117
    CL_COR   desplazar e ir al estado 118


estado 109

   30 list_exp: expresion .
   45 expresion: expresion . OP_SUM termino
   46          | expresion . OP_MEN termino

    OP_SUM  desplazar e ir al estado 49
    OP_MEN  desplazar e ir al estado 50

    $default  reduce usando la regla 30 (list_exp)


estado 110

   28 while_especial: WHILE ID $@2 IN exp_while DO . bloque $@3 ENDWHILE

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    bloque               ir al estado 119
    sentencia            ir al estado 15
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 111

   25 while: WHILE condicion_prima DO bloque $@1 ENDWHILE .

    $default  reduce usando la regla 25 (while)


estado 112

   35 if: IF OP_PAR condicion_prima CL_PAR bloque ELSE . bloque $@5 ENDIF

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    bloque               ir al estado 120
    sentencia            ir al estado 15
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 113

   33 if: IF OP_PAR condicion_prima CL_PAR bloque $@4 . ENDIF

    ENDIF  desplazar e ir al estado 121


estado 114

   16 declaracion_var: DIM OP_CORC list_var CL_COR AS OP_CORC . list_types CL_COR

    INT_TYPE     desplazar e ir al estado 122
    REAL_TYPE    desplazar e ir al estado 123
    STRING_TYPE  desplazar e ir al estado 124

    type_var    ir al estado 125
    list_types  ir al estado 126


estado 115

   53 inicializacion_for: FOR ID OP_ASIG asig_val $@7 TO . asig_val

    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    asig_val  ir al estado 127


estado 116

   55 for: inicializacion_for pasos_for $@8 bloque NEXT ID .

    $default  reduce usando la regla 55 (for)


estado 117

   31 list_exp: list_exp OP_COMA . expresion

    OP_PAR      desplazar e ir al estado 1
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    ID          desplazar e ir al estado 31

    expresion    ir al estado 128
    termino      ir al estado 23
    termino_par  ir al estado 24
    asig_val     ir al estado 27


estado 118

   29 exp_while: OP_CORC list_exp CL_COR .

    $default  reduce usando la regla 29 (exp_while)


estado 119

    4 bloque: bloque . sentencia
   28 while_especial: WHILE ID $@2 IN exp_while DO bloque . $@3 ENDWHILE

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    $default  reduce usando la regla 27 ($@3)

    sentencia            ir al estado 47
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    $@3                  ir al estado 129
    if                   ir al estado 21
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 120

    4 bloque: bloque . sentencia
   35 if: IF OP_PAR condicion_prima CL_PAR bloque ELSE bloque . $@5 ENDIF

    OP_PAR      desplazar e ir al estado 1
    WHILE       desplazar e ir al estado 2
    IF          desplazar e ir al estado 3
    DIM         desplazar e ir al estado 4
    FOR         desplazar e ir al estado 5
    STRING_DEC  desplazar e ir al estado 6
    INT_NUM     desplazar e ir al estado 7
    FLOAT_NUM   desplazar e ir al estado 8
    DISPLAY     desplazar e ir al estado 9
    GET         desplazar e ir al estado 10
    ID          desplazar e ir al estado 11

    $default  reduce usando la regla 34 ($@5)

    sentencia            ir al estado 47
    sentencia_simple     ir al estado 16
    sentencia_compuesta  ir al estado 17
    declaracion_var      ir al estado 18
    while                ir al estado 19
    while_especial       ir al estado 20
    if                   ir al estado 21
    $@5                  ir al estado 130
    expresion            ir al estado 22
    termino              ir al estado 23
    termino_par          ir al estado 24
    inicializacion_for   ir al estado 25
    for                  ir al estado 26
    asig_val             ir al estado 27
    asignacion           ir al estado 28
    display              ir al estado 29
    get_action           ir al estado 30


estado 121

   33 if: IF OP_PAR condicion_prima CL_PAR bloque $@4 ENDIF .

    $default  reduce usando la regla 33 (if)


estado 122

   19 type_var: INT_TYPE .

    $default  reduce usando la regla 19 (type_var)


estado 123

   20 type_var: REAL_TYPE .

    $default  reduce usando la regla 20 (type_var)


estado 124

   21 type_var: STRING_TYPE .

    $default  reduce usando la regla 21 (type_var)


estado 125

   22 list_types: type_var .

    $default  reduce usando la regla 22 (list_types)


estado 126

   16 declaracion_var: DIM OP_CORC list_var CL_COR AS OP_CORC list_types . CL_COR
   23 list_types: list_types . OP_COMA type_var

    OP_COMA  desplazar e ir al estado 131
    CL_COR   desplazar e ir al estado 132


estado 127

   53 inicializacion_for: FOR ID OP_ASIG asig_val $@7 TO asig_val .

    $default  reduce usando la regla 53 (inicializacion_for)


estado 128

   31 list_exp: list_exp OP_COMA expresion .
   45 expresion: expresion . OP_SUM termino
   46          | expresion . OP_MEN termino

    OP_SUM  desplazar e ir al estado 49
    OP_MEN  desplazar e ir al estado 50

    $default  reduce usando la regla 31 (list_exp)


estado 129

   28 while_especial: WHILE ID $@2 IN exp_while DO bloque $@3 . ENDWHILE

    ENDWHILE  desplazar e ir al estado 133


estado 130

   35 if: IF OP_PAR condicion_prima CL_PAR bloque ELSE bloque $@5 . ENDIF

    ENDIF  desplazar e ir al estado 134


estado 131

   23 list_types: list_types OP_COMA . type_var

    INT_TYPE     desplazar e ir al estado 122
    REAL_TYPE    desplazar e ir al estado 123
    STRING_TYPE  desplazar e ir al estado 124

    type_var  ir al estado 135


estado 132

   16 declaracion_var: DIM OP_CORC list_var CL_COR AS OP_CORC list_types CL_COR .

    $default  reduce usando la regla 16 (declaracion_var)


estado 133

   28 while_especial: WHILE ID $@2 IN exp_while DO bloque $@3 ENDWHILE .

    $default  reduce usando la regla 28 (while_especial)


estado 134

   35 if: IF OP_PAR condicion_prima CL_PAR bloque ELSE bloque $@5 ENDIF .

    $default  reduce usando la regla 35 (if)


estado 135

   23 list_types: list_types OP_COMA type_var .

    $default  reduce usando la regla 23 (list_types)
