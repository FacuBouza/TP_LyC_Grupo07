Nonterminals useless in grammar

   exp_while
   display
   get_action


Terminals unused in grammar

   OP_ENDLINE
   OP_KEY
   CL_KEY
   DIGITO
   CARACTER
   COMMENT
   DISPLAY
   GET


Rules useless in grammar

   51 exp_while: OP_CORC list_exp CL_COR

   52 display: DISPLAY asig_val

   53 get_action: GET ID


Gramática

    0 $accept: programa $end

    1 programa: main

    2 main: resto_programa

    3 resto_programa: sentencia
    4               | resto_programa sentencia

    5 sentencia: while
    6          | if
    7          | for
    8          | asignacion
    9          | declaracion_var

   10 declaracion_var: DIM OP_CORC list_var CL_COR AS OP_CORC list_types CL_COR

   11 list_var: ID
   12         | ID OP_COMA list_var

   13 type_var: INT_TYPE
   14         | REAL_TYPE
   15         | STRING_TYPE

   16 list_types: type_var
   17           | list_types OP_COMA type_var

   18 while: WHILE ID IN list_exp DO sentencia ENDWHILE

   19 list_exp: expresion
   20         | list_exp OP_COMA expresion

   21 if: IF OP_PAR condicion CL_PAR sentencia ENDIF
   22   | IF OP_PAR condicion CL_PAR sentencia ELSE sentencia ENDIF

   23 condicion: comparacion
   24          | condicion_anidada
   25          | NOT comparacion

   26 condicion_anidada: comparacion OP_AND comparacion
   27                  | comparacion OP_OR comparacion

   28 comparacion: expresion op_comparacion expresion

   29 expresion: termino
   30          | expresion OP_SUM termino
   31          | expresion OP_MEN termino

   32 termino: termino_par
   33        | termino OP_MULT termino_par
   34        | termino OP_DIV termino_par

   35 termino_par: asig_val
   36            | OP_PAR expresion CL_PAR

   37 for: FOR ID OP_ASIG asig_val TO asig_val pasos_for sentencia NEXT ID
   38    | FOR ID OP_ASIG asig_val TO asig_val sentencia NEXT ID

   39 pasos_for: OP_CORC expresion CL_COR

   40 asig_val: ID
   41         | INT_NUM
   42         | FLOAT_NUM
   43         | STRING_DEC

   44 asignacion: ID OP_ASIG expresion

   45 op_comparacion: OP_EQ
   46               | OP_GE
   47               | OP_GT
   48               | OP_LE
   49               | OP_LT
   50               | OP_DIST


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
OP_ASIG (258) 37 38 44
OP_GT (259) 47
OP_LT (260) 49
OP_GE (261) 46
OP_LE (262) 48
OP_EQ (263) 45
OP_SUM (264) 30
OP_MULT (265) 33
OP_MEN (266) 31
OP_DIV (267) 34
OP_OR (268) 27
OP_AND (269) 26
NOT (270) 25
OP_DIST (271) 50
OP_ENDLINE (272)
OP_COMA (273) 12 17 20
OP_PAR (274) 21 22 36
CL_PAR (275) 21 22 36
OP_KEY (276)
CL_KEY (277)
OP_CORC (278) 10 39
CL_COR (279) 10 39
WHILE (280) 18
IF (281) 21 22
ENDIF (282) 21 22
ELSE (283) 22
DIM (284) 10
AS (285) 10
IN (286) 18
DO (287) 18
ENDWHILE (288) 18
FOR (289) 37 38
TO (290) 37 38
NEXT (291) 37 38
INT_TYPE (292) 13
REAL_TYPE (293) 14
STRING_TYPE (294) 15
DIGITO (295)
CARACTER (296)
COMMENT (297)
STRING_DEC (298) 43
INT_NUM (299) 41
FLOAT_NUM (300) 42
DISPLAY (301)
GET (302)
ID (303) 11 12 18 37 38 40 44


No terminales con las reglas donde aparecen

$accept (49)
    en la izquierda: 0
programa (50)
    en la izquierda: 1, en la derecha: 0
main (51)
    en la izquierda: 2, en la derecha: 1
resto_programa (52)
    en la izquierda: 3 4, en la derecha: 2 4
sentencia (53)
    en la izquierda: 5 6 7 8 9, en la derecha: 3 4 18 21 22 37 38
declaracion_var (54)
    en la izquierda: 10, en la derecha: 9
list_var (55)
    en la izquierda: 11 12, en la derecha: 10 12
type_var (56)
    en la izquierda: 13 14 15, en la derecha: 16 17
list_types (57)
    en la izquierda: 16 17, en la derecha: 10 17
while (58)
    en la izquierda: 18, en la derecha: 5
list_exp (59)
    en la izquierda: 19 20, en la derecha: 18 20
if (60)
    en la izquierda: 21 22, en la derecha: 6
condicion (61)
    en la izquierda: 23 24 25, en la derecha: 21 22
condicion_anidada (62)
    en la izquierda: 26 27, en la derecha: 24
comparacion (63)
    en la izquierda: 28, en la derecha: 23 25 26 27
expresion (64)
    en la izquierda: 29 30 31, en la derecha: 19 20 28 30 31 36 39
    44
termino (65)
    en la izquierda: 32 33 34, en la derecha: 29 30 31 33 34
termino_par (66)
    en la izquierda: 35 36, en la derecha: 32 33 34
for (67)
    en la izquierda: 37 38, en la derecha: 7
pasos_for (68)
    en la izquierda: 39, en la derecha: 37
asig_val (69)
    en la izquierda: 40 41 42 43, en la derecha: 35 37 38
asignacion (70)
    en la izquierda: 44, en la derecha: 8
op_comparacion (71)
    en la izquierda: 45 46 47 48 49 50, en la derecha: 28


estado 0

    0 $accept: . programa $end

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    DIM    desplazar e ir al estado 3
    FOR    desplazar e ir al estado 4
    ID     desplazar e ir al estado 5

    programa         ir al estado 6
    main             ir al estado 7
    resto_programa   ir al estado 8
    sentencia        ir al estado 9
    declaracion_var  ir al estado 10
    while            ir al estado 11
    if               ir al estado 12
    for              ir al estado 13
    asignacion       ir al estado 14


estado 1

   18 while: WHILE . ID IN list_exp DO sentencia ENDWHILE

    ID  desplazar e ir al estado 15


estado 2

   21 if: IF . OP_PAR condicion CL_PAR sentencia ENDIF
   22   | IF . OP_PAR condicion CL_PAR sentencia ELSE sentencia ENDIF

    OP_PAR  desplazar e ir al estado 16


estado 3

   10 declaracion_var: DIM . OP_CORC list_var CL_COR AS OP_CORC list_types CL_COR

    OP_CORC  desplazar e ir al estado 17


estado 4

   37 for: FOR . ID OP_ASIG asig_val TO asig_val pasos_for sentencia NEXT ID
   38    | FOR . ID OP_ASIG asig_val TO asig_val sentencia NEXT ID

    ID  desplazar e ir al estado 18


estado 5

   44 asignacion: ID . OP_ASIG expresion

    OP_ASIG  desplazar e ir al estado 19


estado 6

    0 $accept: programa . $end

    $end  desplazar e ir al estado 20


estado 7

    1 programa: main .

    $default  reduce usando la regla 1 (programa)


estado 8

    2 main: resto_programa .
    4 resto_programa: resto_programa . sentencia

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    DIM    desplazar e ir al estado 3
    FOR    desplazar e ir al estado 4
    ID     desplazar e ir al estado 5

    $default  reduce usando la regla 2 (main)

    sentencia        ir al estado 21
    declaracion_var  ir al estado 10
    while            ir al estado 11
    if               ir al estado 12
    for              ir al estado 13
    asignacion       ir al estado 14


estado 9

    3 resto_programa: sentencia .

    $default  reduce usando la regla 3 (resto_programa)


estado 10

    9 sentencia: declaracion_var .

    $default  reduce usando la regla 9 (sentencia)


estado 11

    5 sentencia: while .

    $default  reduce usando la regla 5 (sentencia)


estado 12

    6 sentencia: if .

    $default  reduce usando la regla 6 (sentencia)


estado 13

    7 sentencia: for .

    $default  reduce usando la regla 7 (sentencia)


estado 14

    8 sentencia: asignacion .

    $default  reduce usando la regla 8 (sentencia)


estado 15

   18 while: WHILE ID . IN list_exp DO sentencia ENDWHILE

    IN  desplazar e ir al estado 22


estado 16

   21 if: IF OP_PAR . condicion CL_PAR sentencia ENDIF
   22   | IF OP_PAR . condicion CL_PAR sentencia ELSE sentencia ENDIF

    NOT         desplazar e ir al estado 23
    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    condicion          ir al estado 29
    condicion_anidada  ir al estado 30
    comparacion        ir al estado 31
    expresion          ir al estado 32
    termino            ir al estado 33
    termino_par        ir al estado 34
    asig_val           ir al estado 35


estado 17

   10 declaracion_var: DIM OP_CORC . list_var CL_COR AS OP_CORC list_types CL_COR

    ID  desplazar e ir al estado 36

    list_var  ir al estado 37


estado 18

   37 for: FOR ID . OP_ASIG asig_val TO asig_val pasos_for sentencia NEXT ID
   38    | FOR ID . OP_ASIG asig_val TO asig_val sentencia NEXT ID

    OP_ASIG  desplazar e ir al estado 38


estado 19

   44 asignacion: ID OP_ASIG . expresion

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    expresion    ir al estado 39
    termino      ir al estado 33
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 20

    0 $accept: programa $end .

    $default  aceptar


estado 21

    4 resto_programa: resto_programa sentencia .

    $default  reduce usando la regla 4 (resto_programa)


estado 22

   18 while: WHILE ID IN . list_exp DO sentencia ENDWHILE

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    list_exp     ir al estado 40
    expresion    ir al estado 41
    termino      ir al estado 33
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 23

   25 condicion: NOT . comparacion

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    comparacion  ir al estado 42
    expresion    ir al estado 32
    termino      ir al estado 33
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 24

   36 termino_par: OP_PAR . expresion CL_PAR

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    expresion    ir al estado 43
    termino      ir al estado 33
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 25

   43 asig_val: STRING_DEC .

    $default  reduce usando la regla 43 (asig_val)


estado 26

   41 asig_val: INT_NUM .

    $default  reduce usando la regla 41 (asig_val)


estado 27

   42 asig_val: FLOAT_NUM .

    $default  reduce usando la regla 42 (asig_val)


estado 28

   40 asig_val: ID .

    $default  reduce usando la regla 40 (asig_val)


estado 29

   21 if: IF OP_PAR condicion . CL_PAR sentencia ENDIF
   22   | IF OP_PAR condicion . CL_PAR sentencia ELSE sentencia ENDIF

    CL_PAR  desplazar e ir al estado 44


estado 30

   24 condicion: condicion_anidada .

    $default  reduce usando la regla 24 (condicion)


estado 31

   23 condicion: comparacion .
   26 condicion_anidada: comparacion . OP_AND comparacion
   27                  | comparacion . OP_OR comparacion

    OP_OR   desplazar e ir al estado 45
    OP_AND  desplazar e ir al estado 46

    $default  reduce usando la regla 23 (condicion)


estado 32

   28 comparacion: expresion . op_comparacion expresion
   30 expresion: expresion . OP_SUM termino
   31          | expresion . OP_MEN termino

    OP_GT    desplazar e ir al estado 47
    OP_LT    desplazar e ir al estado 48
    OP_GE    desplazar e ir al estado 49
    OP_LE    desplazar e ir al estado 50
    OP_EQ    desplazar e ir al estado 51
    OP_SUM   desplazar e ir al estado 52
    OP_MEN   desplazar e ir al estado 53
    OP_DIST  desplazar e ir al estado 54

    op_comparacion  ir al estado 55


estado 33

   29 expresion: termino .
   33 termino: termino . OP_MULT termino_par
   34        | termino . OP_DIV termino_par

    OP_MULT  desplazar e ir al estado 56
    OP_DIV   desplazar e ir al estado 57

    $default  reduce usando la regla 29 (expresion)


estado 34

   32 termino: termino_par .

    $default  reduce usando la regla 32 (termino)


estado 35

   35 termino_par: asig_val .

    $default  reduce usando la regla 35 (termino_par)


estado 36

   11 list_var: ID .
   12         | ID . OP_COMA list_var

    OP_COMA  desplazar e ir al estado 58

    $default  reduce usando la regla 11 (list_var)


estado 37

   10 declaracion_var: DIM OP_CORC list_var . CL_COR AS OP_CORC list_types CL_COR

    CL_COR  desplazar e ir al estado 59


estado 38

   37 for: FOR ID OP_ASIG . asig_val TO asig_val pasos_for sentencia NEXT ID
   38    | FOR ID OP_ASIG . asig_val TO asig_val sentencia NEXT ID

    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    asig_val  ir al estado 60


estado 39

   30 expresion: expresion . OP_SUM termino
   31          | expresion . OP_MEN termino
   44 asignacion: ID OP_ASIG expresion .

    OP_SUM  desplazar e ir al estado 52
    OP_MEN  desplazar e ir al estado 53

    $default  reduce usando la regla 44 (asignacion)


estado 40

   18 while: WHILE ID IN list_exp . DO sentencia ENDWHILE
   20 list_exp: list_exp . OP_COMA expresion

    OP_COMA  desplazar e ir al estado 61
    DO       desplazar e ir al estado 62


estado 41

   19 list_exp: expresion .
   30 expresion: expresion . OP_SUM termino
   31          | expresion . OP_MEN termino

    OP_SUM  desplazar e ir al estado 52
    OP_MEN  desplazar e ir al estado 53

    $default  reduce usando la regla 19 (list_exp)


estado 42

   25 condicion: NOT comparacion .

    $default  reduce usando la regla 25 (condicion)


estado 43

   30 expresion: expresion . OP_SUM termino
   31          | expresion . OP_MEN termino
   36 termino_par: OP_PAR expresion . CL_PAR

    OP_SUM  desplazar e ir al estado 52
    OP_MEN  desplazar e ir al estado 53
    CL_PAR  desplazar e ir al estado 63


estado 44

   21 if: IF OP_PAR condicion CL_PAR . sentencia ENDIF
   22   | IF OP_PAR condicion CL_PAR . sentencia ELSE sentencia ENDIF

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    DIM    desplazar e ir al estado 3
    FOR    desplazar e ir al estado 4
    ID     desplazar e ir al estado 5

    sentencia        ir al estado 64
    declaracion_var  ir al estado 10
    while            ir al estado 11
    if               ir al estado 12
    for              ir al estado 13
    asignacion       ir al estado 14


estado 45

   27 condicion_anidada: comparacion OP_OR . comparacion

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    comparacion  ir al estado 65
    expresion    ir al estado 32
    termino      ir al estado 33
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 46

   26 condicion_anidada: comparacion OP_AND . comparacion

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    comparacion  ir al estado 66
    expresion    ir al estado 32
    termino      ir al estado 33
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 47

   47 op_comparacion: OP_GT .

    $default  reduce usando la regla 47 (op_comparacion)


estado 48

   49 op_comparacion: OP_LT .

    $default  reduce usando la regla 49 (op_comparacion)


estado 49

   46 op_comparacion: OP_GE .

    $default  reduce usando la regla 46 (op_comparacion)


estado 50

   48 op_comparacion: OP_LE .

    $default  reduce usando la regla 48 (op_comparacion)


estado 51

   45 op_comparacion: OP_EQ .

    $default  reduce usando la regla 45 (op_comparacion)


estado 52

   30 expresion: expresion OP_SUM . termino

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    termino      ir al estado 67
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 53

   31 expresion: expresion OP_MEN . termino

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    termino      ir al estado 68
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 54

   50 op_comparacion: OP_DIST .

    $default  reduce usando la regla 50 (op_comparacion)


estado 55

   28 comparacion: expresion op_comparacion . expresion

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    expresion    ir al estado 69
    termino      ir al estado 33
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 56

   33 termino: termino OP_MULT . termino_par

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    termino_par  ir al estado 70
    asig_val     ir al estado 35


estado 57

   34 termino: termino OP_DIV . termino_par

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    termino_par  ir al estado 71
    asig_val     ir al estado 35


estado 58

   12 list_var: ID OP_COMA . list_var

    ID  desplazar e ir al estado 36

    list_var  ir al estado 72


estado 59

   10 declaracion_var: DIM OP_CORC list_var CL_COR . AS OP_CORC list_types CL_COR

    AS  desplazar e ir al estado 73


estado 60

   37 for: FOR ID OP_ASIG asig_val . TO asig_val pasos_for sentencia NEXT ID
   38    | FOR ID OP_ASIG asig_val . TO asig_val sentencia NEXT ID

    TO  desplazar e ir al estado 74


estado 61

   20 list_exp: list_exp OP_COMA . expresion

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    expresion    ir al estado 75
    termino      ir al estado 33
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 62

   18 while: WHILE ID IN list_exp DO . sentencia ENDWHILE

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    DIM    desplazar e ir al estado 3
    FOR    desplazar e ir al estado 4
    ID     desplazar e ir al estado 5

    sentencia        ir al estado 76
    declaracion_var  ir al estado 10
    while            ir al estado 11
    if               ir al estado 12
    for              ir al estado 13
    asignacion       ir al estado 14


estado 63

   36 termino_par: OP_PAR expresion CL_PAR .

    $default  reduce usando la regla 36 (termino_par)


estado 64

   21 if: IF OP_PAR condicion CL_PAR sentencia . ENDIF
   22   | IF OP_PAR condicion CL_PAR sentencia . ELSE sentencia ENDIF

    ENDIF  desplazar e ir al estado 77
    ELSE   desplazar e ir al estado 78


estado 65

   27 condicion_anidada: comparacion OP_OR comparacion .

    $default  reduce usando la regla 27 (condicion_anidada)


estado 66

   26 condicion_anidada: comparacion OP_AND comparacion .

    $default  reduce usando la regla 26 (condicion_anidada)


estado 67

   30 expresion: expresion OP_SUM termino .
   33 termino: termino . OP_MULT termino_par
   34        | termino . OP_DIV termino_par

    OP_MULT  desplazar e ir al estado 56
    OP_DIV   desplazar e ir al estado 57

    $default  reduce usando la regla 30 (expresion)


estado 68

   31 expresion: expresion OP_MEN termino .
   33 termino: termino . OP_MULT termino_par
   34        | termino . OP_DIV termino_par

    OP_MULT  desplazar e ir al estado 56
    OP_DIV   desplazar e ir al estado 57

    $default  reduce usando la regla 31 (expresion)


estado 69

   28 comparacion: expresion op_comparacion expresion .
   30 expresion: expresion . OP_SUM termino
   31          | expresion . OP_MEN termino

    OP_SUM  desplazar e ir al estado 52
    OP_MEN  desplazar e ir al estado 53

    $default  reduce usando la regla 28 (comparacion)


estado 70

   33 termino: termino OP_MULT termino_par .

    $default  reduce usando la regla 33 (termino)


estado 71

   34 termino: termino OP_DIV termino_par .

    $default  reduce usando la regla 34 (termino)


estado 72

   12 list_var: ID OP_COMA list_var .

    $default  reduce usando la regla 12 (list_var)


estado 73

   10 declaracion_var: DIM OP_CORC list_var CL_COR AS . OP_CORC list_types CL_COR

    OP_CORC  desplazar e ir al estado 79


estado 74

   37 for: FOR ID OP_ASIG asig_val TO . asig_val pasos_for sentencia NEXT ID
   38    | FOR ID OP_ASIG asig_val TO . asig_val sentencia NEXT ID

    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    asig_val  ir al estado 80


estado 75

   20 list_exp: list_exp OP_COMA expresion .
   30 expresion: expresion . OP_SUM termino
   31          | expresion . OP_MEN termino

    OP_SUM  desplazar e ir al estado 52
    OP_MEN  desplazar e ir al estado 53

    $default  reduce usando la regla 20 (list_exp)


estado 76

   18 while: WHILE ID IN list_exp DO sentencia . ENDWHILE

    ENDWHILE  desplazar e ir al estado 81


estado 77

   21 if: IF OP_PAR condicion CL_PAR sentencia ENDIF .

    $default  reduce usando la regla 21 (if)


estado 78

   22 if: IF OP_PAR condicion CL_PAR sentencia ELSE . sentencia ENDIF

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    DIM    desplazar e ir al estado 3
    FOR    desplazar e ir al estado 4
    ID     desplazar e ir al estado 5

    sentencia        ir al estado 82
    declaracion_var  ir al estado 10
    while            ir al estado 11
    if               ir al estado 12
    for              ir al estado 13
    asignacion       ir al estado 14


estado 79

   10 declaracion_var: DIM OP_CORC list_var CL_COR AS OP_CORC . list_types CL_COR

    INT_TYPE     desplazar e ir al estado 83
    REAL_TYPE    desplazar e ir al estado 84
    STRING_TYPE  desplazar e ir al estado 85

    type_var    ir al estado 86
    list_types  ir al estado 87


estado 80

   37 for: FOR ID OP_ASIG asig_val TO asig_val . pasos_for sentencia NEXT ID
   38    | FOR ID OP_ASIG asig_val TO asig_val . sentencia NEXT ID

    OP_CORC  desplazar e ir al estado 88
    WHILE    desplazar e ir al estado 1
    IF       desplazar e ir al estado 2
    DIM      desplazar e ir al estado 3
    FOR      desplazar e ir al estado 4
    ID       desplazar e ir al estado 5

    sentencia        ir al estado 89
    declaracion_var  ir al estado 10
    while            ir al estado 11
    if               ir al estado 12
    for              ir al estado 13
    pasos_for        ir al estado 90
    asignacion       ir al estado 14


estado 81

   18 while: WHILE ID IN list_exp DO sentencia ENDWHILE .

    $default  reduce usando la regla 18 (while)


estado 82

   22 if: IF OP_PAR condicion CL_PAR sentencia ELSE sentencia . ENDIF

    ENDIF  desplazar e ir al estado 91


estado 83

   13 type_var: INT_TYPE .

    $default  reduce usando la regla 13 (type_var)


estado 84

   14 type_var: REAL_TYPE .

    $default  reduce usando la regla 14 (type_var)


estado 85

   15 type_var: STRING_TYPE .

    $default  reduce usando la regla 15 (type_var)


estado 86

   16 list_types: type_var .

    $default  reduce usando la regla 16 (list_types)


estado 87

   10 declaracion_var: DIM OP_CORC list_var CL_COR AS OP_CORC list_types . CL_COR
   17 list_types: list_types . OP_COMA type_var

    OP_COMA  desplazar e ir al estado 92
    CL_COR   desplazar e ir al estado 93


estado 88

   39 pasos_for: OP_CORC . expresion CL_COR

    OP_PAR      desplazar e ir al estado 24
    STRING_DEC  desplazar e ir al estado 25
    INT_NUM     desplazar e ir al estado 26
    FLOAT_NUM   desplazar e ir al estado 27
    ID          desplazar e ir al estado 28

    expresion    ir al estado 94
    termino      ir al estado 33
    termino_par  ir al estado 34
    asig_val     ir al estado 35


estado 89

   38 for: FOR ID OP_ASIG asig_val TO asig_val sentencia . NEXT ID

    NEXT  desplazar e ir al estado 95


estado 90

   37 for: FOR ID OP_ASIG asig_val TO asig_val pasos_for . sentencia NEXT ID

    WHILE  desplazar e ir al estado 1
    IF     desplazar e ir al estado 2
    DIM    desplazar e ir al estado 3
    FOR    desplazar e ir al estado 4
    ID     desplazar e ir al estado 5

    sentencia        ir al estado 96
    declaracion_var  ir al estado 10
    while            ir al estado 11
    if               ir al estado 12
    for              ir al estado 13
    asignacion       ir al estado 14


estado 91

   22 if: IF OP_PAR condicion CL_PAR sentencia ELSE sentencia ENDIF .

    $default  reduce usando la regla 22 (if)


estado 92

   17 list_types: list_types OP_COMA . type_var

    INT_TYPE     desplazar e ir al estado 83
    REAL_TYPE    desplazar e ir al estado 84
    STRING_TYPE  desplazar e ir al estado 85

    type_var  ir al estado 97


estado 93

   10 declaracion_var: DIM OP_CORC list_var CL_COR AS OP_CORC list_types CL_COR .

    $default  reduce usando la regla 10 (declaracion_var)


estado 94

   30 expresion: expresion . OP_SUM termino
   31          | expresion . OP_MEN termino
   39 pasos_for: OP_CORC expresion . CL_COR

    OP_SUM  desplazar e ir al estado 52
    OP_MEN  desplazar e ir al estado 53
    CL_COR  desplazar e ir al estado 98


estado 95

   38 for: FOR ID OP_ASIG asig_val TO asig_val sentencia NEXT . ID

    ID  desplazar e ir al estado 99


estado 96

   37 for: FOR ID OP_ASIG asig_val TO asig_val pasos_for sentencia . NEXT ID

    NEXT  desplazar e ir al estado 100


estado 97

   17 list_types: list_types OP_COMA type_var .

    $default  reduce usando la regla 17 (list_types)


estado 98

   39 pasos_for: OP_CORC expresion CL_COR .

    $default  reduce usando la regla 39 (pasos_for)


estado 99

   38 for: FOR ID OP_ASIG asig_val TO asig_val sentencia NEXT ID .

    $default  reduce usando la regla 38 (for)


estado 100

   37 for: FOR ID OP_ASIG asig_val TO asig_val pasos_for sentencia NEXT . ID

    ID  desplazar e ir al estado 101


estado 101

   37 for: FOR ID OP_ASIG asig_val TO asig_val pasos_for sentencia NEXT ID .

    $default  reduce usando la regla 37 (for)
